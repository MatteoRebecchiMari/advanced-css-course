/*
COLORS:
*/

$primary: #55c57a;
$primary-light: #7ed56f;
$primary-dark: #28b485;
$dark-grey: #777;
$white: #fff;

/* Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
    /* force inheritance from the BODY */
}

html {
    /* 
        Use the default font size.
        - step 1: set the defult font size to 10px (this helps converting in rem)
        - step 2: conver in rem (10px -> 1 rem)
        - step 3: because the default font size of a browser is 16px, we use the
                62.5% in order to set our website as default to 10px.
                16px = 100%
                10px / 16px = 0.625 -> 62.5%
    */
    font-size: 62.5%;
}

/* We set the font in the body for hineritance */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /*1.7 times bigger than the normal line*/
    line-height: 1.7;
    color: $dark-grey;
    padding: 3rem;
    box-sizing: border-box;
}

.header {
    position: relative;
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba($primary, 0.8), rgba($primary-dark, 0.865)), url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    /* see https://bennettfeely.com/clippy/ */
    clip-path: polygon(0 0, 100% 0%, 100% 85%, 0% 100%);
}

.logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.logo {
    height: 3.5rem;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* center the image */
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: $white;
    text-transform: uppercase;
    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary-main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInLeft 1s ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

/* Animation from right to left */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(+100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBotton {
    0% {
        opacity: 0;
        transform: translateY(+4rem);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.btn:link,
.btn:visited {
    display: inline-block;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    border-radius: 3rem;
    transition: all ease-in .2s;
    position: relative;
}

.btn-animated {
    animation: moveInBotton 1s ease-out .75s;
    /*Il valore iniziale dell'animazione viene applicato prima che parta*/
    animation-fill-mode: backwards;
}

.btn:hover {
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

/* Btn clicked: reduce the shadow */
.btn:active {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn-white {
    background-color: $white;
    color: $dark-grey;
}

/* Pseudo-elements  after */
/**  Creates an element (with optional content) that is the last child of the selected element **/
.btn::after {
    content: "";
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    border-radius: 3rem;
    z-index: -1;
    transition: all .4s;
}

.btn-white:after {
    background-color: $white;
}

/* We want the Pseudo-elements element to growup when the button is hover */
.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    /* 
      To make the Pseudo-elements disappear we set the opacity
      and the animation do the trick 
    */
    opacity: 0;
}